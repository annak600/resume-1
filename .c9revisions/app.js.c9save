{"ts":1354842104530,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var express = require('express'),\n    app = express()\n    util  = require('util'),\n    exec = require('child_process').exec,\n    rest = require('restler'),\n    nodemailer = require('nodemailer'),\n    config = require('./config.js'),\n    callback = '';\n    \napp.use(express.static(__dirname + '/public'));\napp.use(express.bodyParser());\n\n//CORS middleware for anyone accessing my resume/API with cross-domain Javascript\nvar allowCrossDomain = function(req, res, next) {\n    //console.log(req.headers);\n    if(req.headers.origin) {\n        res.header('Access-Control-Allow-Origin', req.headers.origin);\n        res.header('Access-Control-Allow-Origin', '*');\n        res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n        res.header('Access-Control-Max-Age', '600');\n    }\n    next();\n}\n\napp.use(allowCrossDomain);\n\n// Function for sending an e-mail using my Gmail address\nfunction sendMail(address, subject, text) {\n    //General send e-mail\n    // create reusable transport method (opens pool of SMTP connections)\n    var smtpTransport = nodemailer.createTransport(\"SMTP\",{\n        service: \"Gmail\",\n        auth: {\n            user: config.email.username,\n            pass: process.env.EMAIL_PASSWD || config.email.password\n        }\n    });\n    // setup e-mail data with unicode symbols\n    var mailOptions = {\n        from: \"Krists Auders <kristsauders@gmail.com>\", // sender address\n        to: address, // destination address\n        subject: subject, // Subject line\n        text: text, // plaintext body\n    }\n    // send mail with defined transport object\n    smtpTransport.sendMail(mailOptions, function(error, response){\n        if(error){\n            console.log(error);\n        }else{\n            console.log(\"Message sent: \" + response.message);\n        }\n    \n        // Shut down the connection pool, since this doesn't happen often enough to keep it open\n        smtpTransport.close();\n    });\n}\n\n// Path to post to for sending an e-mail message, should probably be more secure than this..\napp.post('/email', function(req, res) {\n    sendMail(req.body.address, req.body.subject, req.body.text);\n    res.send(200);\n});\n\n// This is for receiving callbacks from AT&T when an SMS message arrives\n// in order to respond to an API Call contact from the resume\napp.all('/callback', function(req, res) {\n    console.log('Received SMS on ' + req.body.DateTime + ' from ' + req.body.SenderAddress);\n    console.log(req.body.Message);\n    res.send(200);\n    console.log('Posting API response to ' + callback);\n    rest.postJson(callback, {\n                \"message\": req.body.Message,\n                \"name\": \"Krists Auders\",\n                \"callback\": \"http://kristsauders.com/messages\"\n        }).on('complete', function(data) {\n            console.log(data);\n    });\n});\n\n// This is the endpoint for contacting me via API Call\napp.post('/messages', function(req, res) {\n    callback = req.body.callback;\n    rest.post('https://api.att.com/rest/sms/2/messaging/outbox', {\n            data: {\n                \"Address\": \"tel:8588228604\",\n                \"Message\": req.body.name + \": \" + req.body.message\n            },\n            headers: {\n                \"Authorization\": \"BEARER 441b6a6c38a433eb5f3a40e66f8874b0\"\n            }\n        }).on('complete', function(data) {\n            console.log(data);\n    });\n    \n    res.send('\\n\\n\\n\\\n-----------------------------------------\\n\\\nThank you for your message, ' + req.body.name + '! \\n\\\nI will reply with an HTTP POST to your callback URL: ' + req.body.callback + '\\n\\\n-----------------------------------------\\\n\\n\\n\\n');\n});\n\n// Listen only from localhost, since this will be routed through a local Nginx proxy\napp.listen(8084, '127.0.0.1');\n\n// Rebuild PDF version of resume on start, will only work on OSX with wkhtmltopdf installed\n    var date = new Date();\n    console.log('Rebuilding PDF resume on ' + date.toLocaleString());\n    exec('/Applications/wkhtmltopdf.app/Contents/MacOS/wkhtmltopdf http://kristsauders.com/resume/resume.html ' + __dirname + '/public/Krists_Auders_Resume.pdf', function(error, stdout, stderr) {\n        if (error !== null) {\n          console.log('exec error: ' + error);\n          console.log(stdout);\n          console.log(stderr);\n        }\n    });\n\nconsole.log('Started up successfully.');\n"]],"start1":0,"start2":0,"length1":0,"length2":4309}]],"length":4309}
{"contributors":[],"silentsave":false,"ts":1354842145099,"patch":[[{"diffs":[[0,"ctions)\n"],[1,"    var epwd = process.env.EMAIL_PASSWD || config.email.password;\n    console.log(epwd);\n"],[0,"    var "]],"start1":1026,"start2":1026,"length1":16,"length2":105},{"diffs":[[0,"ss: "],[-1,"process.env.EMAIL_PASSWD || config.email.passwor"],[1,"epw"],[0,"d\n  "]],"start1":1280,"start2":1280,"length1":56,"length2":11}]],"length":4353,"saved":false}
{"contributors":[],"silentsave":false,"ts":1355175011661,"patch":[[{"diffs":[[0,"p://"],[-1,"kristsauders.com/resume"],[1,"127.0.0.1:8080"],[0,"/res"]],"start1":4028,"start2":4028,"length1":31,"length2":22}]],"length":4344,"saved":false}
{"ts":1355175046806,"patch":[[{"diffs":[[0,".0.1:808"],[-1,"0"],[1,"4"],[0,"/resume."]],"start1":4037,"start2":4037,"length1":17,"length2":17}]],"length":4344,"saved":false}
{"ts":1355182384335,"patch":[[{"diffs":[[0,"stalled\n"],[1,"setTimeout(function() {\n"],[0,"    var "]],"start1":3853,"start2":3853,"length1":16,"length2":40},{"diffs":[[0," http://"],[-1,"127.0.0.1"],[1,"localhost"],[0,":8084/re"]],"start1":4048,"start2":4048,"length1":25,"length2":25},{"diffs":[[0,"\n    });"],[1,"\n}, 5000);"],[0,"\n\nconsol"]],"start1":4317,"start2":4317,"length1":16,"length2":26}]],"length":4378,"saved":false}
{"ts":1355182753812,"patch":[[{"diffs":[[0,"8084"],[-1,", '127.0.0.1'"],[0,");\n\n"]],"start1":3748,"start2":3748,"length1":21,"length2":8}]],"length":4365,"saved":false}
{"ts":1355182950088,"patch":[[{"diffs":[[0,"ten(8084"],[1,", '127.0.0.1'"],[0,");\n\n// R"]],"start1":3744,"start2":3744,"length1":16,"length2":29},{"diffs":[[0," });\n}, "],[-1,"5"],[1,"2"],[0,"000);\n\nc"]],"start1":4321,"start2":4321,"length1":17,"length2":17}]],"length":4378,"saved":false}
